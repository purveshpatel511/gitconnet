[{"/home/matrix11/Project/client/src/index.js":"1","/home/matrix11/Project/client/src/components/header/header.component.jsx":"2","/home/matrix11/Project/client/src/App.js":"3","/home/matrix11/Project/client/src/components/form-input/form-input.component.jsx":"4","/home/matrix11/Project/client/src/components/bookmark-card/bookmark-card.component.jsx":"5","/home/matrix11/Project/client/src/components/contribution-notification-card/contribution-notification-card.component.jsx":"6","/home/matrix11/Project/client/src/reportWebVitals.js":"7","/home/matrix11/Project/client/src/components/projectcardview/projectcardview.component.jsx":"8","/home/matrix11/Project/client/src/components/vertical-scroll/vertical-scroll.component.jsx":"9","/home/matrix11/Project/client/src/components/neumorphic-text/neumorphic-text.component.jsx":"10","/home/matrix11/Project/client/src/components/cardgrid/cardgrid.component.jsx":"11","/home/matrix11/Project/client/src/components/skill-card/skill-card.component.jsx":"12","/home/matrix11/Project/client/src/components/cancel-button/cancel-button.component.jsx":"13","/home/matrix11/Project/client/src/pages/user-profile/user-profile.component.jsx":"14","/home/matrix11/Project/client/src/pages/notification/notification.component.jsx":"15","/home/matrix11/Project/client/src/components/collabration-notification-card/collabration-notification-card.component.jsx":"16","/home/matrix11/Project/client/src/pages/404Page/404Page.component.jsx":"17","/home/matrix11/Project/client/src/components/text-card/text-card.component.jsx":"18","/home/matrix11/Project/client/src/components/form-textbox/form-textbox.component.jsx":"19","/home/matrix11/Project/client/src/components/custom-button/custom-button.component.jsx":"20","/home/matrix11/Project/client/src/pages/search-page/search-page.component.jsx":"21","/home/matrix11/Project/client/src/components/custom-button-card/custom-button-card.component.jsx":"22","/home/matrix11/Project/client/src/components/project-edit-skill/project-edit-skill.component.jsx":"23","/home/matrix11/Project/client/src/components/card/card.component.jsx":"24","/home/matrix11/Project/client/src/pages/user-project/user-project.component.jsx":"25","/home/matrix11/Project/client/src/components/contribution-card/contribution-card.component.jsx":"26","/home/matrix11/Project/client/src/components/cardlist/cardlist.component.jsx":"27"},{"size":501,"mtime":1609403711628,"results":"28","hashOfConfig":"29"},{"size":1913,"mtime":1611343766974,"results":"30","hashOfConfig":"29"},{"size":1907,"mtime":1611343580686,"results":"31","hashOfConfig":"29"},{"size":359,"mtime":1609918589969,"results":"32","hashOfConfig":"29"},{"size":375,"mtime":1610553306756,"results":"33","hashOfConfig":"29"},{"size":495,"mtime":1610562702297,"results":"34","hashOfConfig":"29"},{"size":362,"mtime":1609323110408,"results":"35","hashOfConfig":"29"},{"size":903,"mtime":1610547790482,"results":"36","hashOfConfig":"29"},{"size":542,"mtime":1609401413899,"results":"37","hashOfConfig":"29"},{"size":211,"mtime":1609493295347,"results":"38","hashOfConfig":"29"},{"size":270,"mtime":1609578620386,"results":"39","hashOfConfig":"29"},{"size":424,"mtime":1610193279648,"results":"40","hashOfConfig":"29"},{"size":238,"mtime":1610186267952,"results":"41","hashOfConfig":"29"},{"size":24365,"mtime":1611234674147,"results":"42","hashOfConfig":"29"},{"size":5661,"mtime":1610562711376,"results":"43","hashOfConfig":"29"},{"size":500,"mtime":1610561918487,"results":"44","hashOfConfig":"29"},{"size":487,"mtime":1609493676776,"results":"45","hashOfConfig":"29"},{"size":246,"mtime":1609574656041,"results":"46","hashOfConfig":"29"},{"size":432,"mtime":1610491844967,"results":"47","hashOfConfig":"29"},{"size":259,"mtime":1610131474922,"results":"48","hashOfConfig":"29"},{"size":4858,"mtime":1610745633469,"results":"49","hashOfConfig":"29"},{"size":322,"mtime":1609836284780,"results":"50","hashOfConfig":"29"},{"size":458,"mtime":1610372938320,"results":"51","hashOfConfig":"29"},{"size":200,"mtime":1609520519657,"results":"52","hashOfConfig":"29"},{"size":16992,"mtime":1611239228377,"results":"53","hashOfConfig":"29"},{"size":337,"mtime":1610553448816,"results":"54","hashOfConfig":"29"},{"size":204,"mtime":1609402479359,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1j6ipkc",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/matrix11/Project/client/src/index.js",[],["122","123"],"/home/matrix11/Project/client/src/components/header/header.component.jsx",["124"],"/home/matrix11/Project/client/src/App.js",["125","126","127","128","129","130","131","132","133","134","135"],"/home/matrix11/Project/client/src/components/form-input/form-input.component.jsx",[],["136","137"],"/home/matrix11/Project/client/src/components/bookmark-card/bookmark-card.component.jsx",[],"/home/matrix11/Project/client/src/components/contribution-notification-card/contribution-notification-card.component.jsx",[],"/home/matrix11/Project/client/src/reportWebVitals.js",[],["138","139"],"/home/matrix11/Project/client/src/components/projectcardview/projectcardview.component.jsx",["140"],"import React from 'react';\nimport './projectcardview.style.scss'\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport Card from '../card/card.component';\n\nconst ProjectCardView = (props) => {\n    console.log(props)\n    return(\n        <div className=\"project-card-view\">\n            <h2 className=\"project-title\">{props.projectTitle}</h2>\n            <span className=\"project-discription\">{props.projectDescription}</span>\n            <br/><br />\n            <div className=\"skills-block\">\n                {\n                    props.projectSkill.map((skill) => (\n                        <Card>\n                            <span className=\"project-skill\">{skill}</span>\n                        </Card>\n                    ))\n                }\n            </div>\n            <br/><br />\n            {props.children}\n        </div>        \n    );\n}\n\nexport default ProjectCardView;","/home/matrix11/Project/client/src/components/vertical-scroll/vertical-scroll.component.jsx",["141","142"],"// This is VerticalScroll Component.\n// Every Component that will be display in vertical\n// scroll view that will be disply by this Component.\n\nimport React, { Component } from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport './vertical-scroll.style.scss'\n\nconst VerticalScroll = (props) => {\n    \n    return(\n        <div \n            className=\"vertical-scroll\"\n            style = {{height: props.height,}}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nexport default VerticalScroll;",["143","144"],"/home/matrix11/Project/client/src/components/neumorphic-text/neumorphic-text.component.jsx",[],"/home/matrix11/Project/client/src/components/cardgrid/cardgrid.component.jsx",[],"/home/matrix11/Project/client/src/components/skill-card/skill-card.component.jsx",["145"],"import React from 'react';\nimport './skill-card.style.scss';\n\nimport CancelButton from '../cancel-button/cancel-button.component';\n\nconst SkillCard = ({imageURL, imageText, id}) => {\n    return (\n        <div id={id} className=\"skill-card\">\n            <img className=\"skill-svg\" src={imageURL} alt={imageText} />\n            <span className=\"skill-name\">{imageText}</span>\n        </div>\n    );\n}\n\nexport default SkillCard;","/home/matrix11/Project/client/src/components/cancel-button/cancel-button.component.jsx",[],["146","147"],"/home/matrix11/Project/client/src/pages/user-profile/user-profile.component.jsx",["148","149","150","151","152"],"import React from 'react';\nimport './user-profile.style.scss';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport TextCard from '../../components/text-card/text-card.component';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport CardGrid from '../../components/cardgrid/cardgrid.component';\nimport CardList from '../../components/cardlist/cardlist.component';\nimport Card from '../../components/card/card.component';\nimport ProjectCardView from '../../components/projectcardview/projectcardview.component';\nimport VerticalScroll from '../../components/vertical-scroll/vertical-scroll.component';\nimport SkillCard from '../../components/skill-card/skill-card.component';\nimport CustomButtonCard from '../../components/custom-button-card/custom-button-card.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CancelButton from '../../components/cancel-button/cancel-button.component';\n\nimport AWSSVG from '../../components/skill-card/programing-language-logos/aws.svg';\nimport AndroidSVG from '../../components/skill-card/programing-language-logos/android.svg';\nimport AngularjsSVG from '../../components/skill-card/programing-language-logos/angularjs.svg';\nimport ApacheSVG from '../../components/skill-card/programing-language-logos/apache.svg';\nimport AppceleratorSVG from '../../components/skill-card/programing-language-logos/appcelerator.svg';\nimport AtomSVG from '../../components/skill-card/programing-language-logos/atom.svg';\nimport BabelSVG from '../../components/skill-card/programing-language-logos/babel.svg';\nimport BackBonejsSVG from '../../components/skill-card/programing-language-logos/backbonejs.svg';\nimport BitBucketSVG from '../../components/skill-card/programing-language-logos/bitbucket.svg';\nimport BootStrapSVG from '../../components/skill-card/programing-language-logos/bootstrap.svg';\nimport CSVG from '../../components/skill-card/programing-language-logos/c.svg';\nimport CodeIgniterSVG from '../../components/skill-card/programing-language-logos/codeigniter.svg';\nimport CPlusPlusSVG from '../../components/skill-card/programing-language-logos/cplusplus.svg';\nimport CSharpSVG from '../../components/skill-card/programing-language-logos/csharp.svg';\nimport CSS3SVG from '../../components/skill-card/programing-language-logos/css3.svg';\nimport PythonSVG from '../../components/skill-card/programing-language-logos/python.svg';\nimport JavaSVG from '../../components/skill-card/programing-language-logos/java.svg';\nimport SwiftSVG from '../../components/skill-card/programing-language-logos/swift.svg';\nimport FlutterSVG from '../../components/skill-card/programing-language-logos/flutter.svg';\nimport DartSVG from '../../components/skill-card/programing-language-logos/dart.svg';\nimport PerlSVG from '../../components/skill-card/programing-language-logos/perl.svg';\nimport RubySVG from '../../components/skill-card/programing-language-logos/ruby.svg';\nimport RustSVG from '../../components/skill-card/programing-language-logos/rust.svg';\nimport DockerSVG from '../../components/skill-card/programing-language-logos/docker.svg';\nimport KubernatesSVG from '../../components/skill-card/programing-language-logos/kubernates.svg';\nimport HtmlSVG from '../../components/skill-card/programing-language-logos/html.svg';\nimport JavaScriptSVG from '../../components/skill-card/programing-language-logos/javascript.svg';\nimport ReactjsSVG from '../../components/skill-card/programing-language-logos/reactjs.svg';\nimport NodejsSVG from '../../components/skill-card/programing-language-logos/nodejs.svg';\nimport PHPSVG from '../../components/skill-card/programing-language-logos/php.svg';\nimport OtherSVG from '../../components/skill-card/programing-language-logos/other.svg';\n\nimport GithubSVG from '../../media/github.svg';\nimport LinkedinSVG from '../../media/linkedin.svg';\nimport StackoverflowSVG from '../../media/stackoverflow.svg';\nimport PlusSVG from '../../media/plus.svg';\nimport BookmarkCard from '../../components/bookmark-card/bookmark-card.component';\nimport ContributionCard from '../../components/contribution-card/contribution-card.component';\n\nclass UserProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isEdit: false,\n            name: \"Purvesh Patel\",\n            userid: \"purveshpatel511\",\n            github: \"\",\n            linkedin: \"\",\n            stackoverflow: \"\",\n            tempSkill:\"\",\n            skillCount: 20,\n            skills: [\n                {\n                    key:1,\n                    imageURL: AWSSVG,\n                    imageText: \"Web_Services\"\n                },\n                {\n                    key:1,\n                    imageURL: AWSSVG,\n                    imageText: \"Web_Services\"\n                },\n                {\n                    key:2,\n                    imageURL: BabelSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:3,\n                    imageURL: BackBonejsSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:4,\n                    imageURL: CPlusPlusSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:5,\n                    imageURL: CodeIgniterSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:6,\n                    imageURL: CodeIgniterSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:7,\n                    imageURL: CodeIgniterSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:8,\n                    imageURL: BabelSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:9,\n                    imageURL: BackBonejsSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:10,\n                    imageURL: CPlusPlusSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:11,\n                    imageURL: CodeIgniterSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:12,\n                    imageURL: CodeIgniterSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:13,\n                    imageURL: CodeIgniterSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:14,\n                    imageURL: BabelSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:15,\n                    imageURL: BackBonejsSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:16,\n                    imageURL: CPlusPlusSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:17,\n                    imageURL: CodeIgniterSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:18,\n                    imageURL: CodeIgniterSVG,\n                    imageText: \"Web Services\"\n                },\n                {\n                    key:19,\n                    imageURL: CodeIgniterSVG,\n                    imageText: \"Web Services\"\n                }\n            ],\n            bookmarks: [\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-2\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-3\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-4\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-5\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-6\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-7\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-8\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-9\",\n                    projectDescription: \"This is small description about project.\"\n                }\n            ],\n            contributions: [\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                },\n                {\n                    projectTitle: \"Project-1\",\n                    projectDescription: \"This is small description about project.\"\n                }\n            ]\n        }\n    }\n\n    successNotification() {\n        toast.success(\"Successfully Saved\");\n    }\n\n    removeNotification() {\n        toast.error(\"Bookmark Removed.\");\n    }\n\n    renderSaveButton() {\n        toast.configure();\n        if(this.state.isEdit){\n            return(\n                <CustomButton title=\"Save\" onClick={()=>{this.setState({isEdit: false}); this.successNotification()}} />\n            );\n        }\n        else {\n            return(\n                <CustomButton title=\"Edit Profile\" onClick={()=>{this.setState({isEdit: true})}} />\n            );\n        }\n    }\n\n    renderGeneralProfile() {\n        if(this.state.isEdit){\n            return(\n                <div className=\"edit-profile\">\n                    <VerticalScroll height=\"450px\">\n                    <div className=\"name-section\">\n                        <div className=\"title-card\">\n                            <Card><h3>Name</h3></Card>\n                        </div>\n                        <FormInput placeholder=\"Enter Name\" value={this.state.name} onChange={(e) => {this.setState({name: e.target.value})}} />\n                    </div>\n                    <br /><br />\n                    <div className=\"username-section\">\n                        <div className=\"title-card\">\n                            <Card><h3>Userid</h3></Card>\n                        </div>\n                        <FormInput placeholder=\"Enter Username\" value={this.state.userid} onChange={(e) => {this.setState({name: e.target.value})}} />\n                    </div>\n                    <br /><br />\n                    <div className=\"github-section\">\n                        <div className=\"title-card\">\n                            <Card><h3>Github ID</h3></Card>\n                        </div>\n                        <FormInput placeholder=\"Github User ID\" value={this.state.github} onChange={(e) => {this.setState({name: e.target.value})}} />\n                    </div>\n                    <br /><br />\n                    <div className=\"linkedin-section\">\n                        <div className=\"title-card\">\n                            <Card><h3>LinkedIN</h3></Card>\n                        </div>\n                        <FormInput placeholder=\"LinkedIN ID\" value={this.state.linkedin} onChange={(e) => {this.setState({name: e.target.value})}} />\n                    </div>\n                    <br /><br />\n                    <div className=\"stackoverflow-section\">\n                        <div className=\"title-card\">\n                            <Card><h3>Stackoverflow</h3></Card>\n                        </div>\n                        <FormInput placeholder=\"StackOverflow ID\" value={this.state.stackoverflow} onChange={(e) => {this.setState({name: e.target.value})}} />\n                    </div>\n                    </VerticalScroll>\n                </div>\n            );\n        }\n        else {\n            return(\n                <div className=\"display-profile\">\n                    <VerticalScroll height=\"350px\">\n                        <h2>Name</h2><hr />\n                        <span>{this.state.name}</span>\n                        <br /><br />\n                        <h2>Username</h2><hr />\n                        <span>{this.state.userid}</span>\n                    </VerticalScroll>\n                    <div className=\"modify-grid\">\n                        <CardGrid gridColumn=\"1fr 1fr 1fr\">\n                            <CustomButtonCard classname=\"github-social\" imageURL={GithubSVG} imageText=\"github\" />\n                            <CustomButtonCard classname=\"linkedin-social\" imageURL={LinkedinSVG} imageText=\"linkedin\" />\n                            <CustomButtonCard classname=\"stackoverflow-social\" imageURL={StackoverflowSVG} imageText=\"stackoverflow\" />\n                        </CardGrid>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    addSkill = () => {\n        var logosDict = {\n            amazon: ['aws','web services','amazon web services','webservices'],\n            angularjs: ['angular','angularjs'],\n            apache: ['apache','apache web'],\n            appcelerator: ['appcelerator'],\n            atom: ['atom','atom code','atom editor'],\n            babel: ['babel'],\n            backbonejs: ['backbonejs'],\n            bitbucket: ['bitbucket'],\n            bootstrap: ['bootstrap'],\n            c: ['c','c language'],\n            codeigniter: ['codeigniter'],\n            cplusplus: ['cplusplus','c++','cpp'],\n            csharp: ['csharp','c#'],\n            css3: ['css','css3'],\n            python: ['python','python2','python3','python3.x'],\n            java: ['java'],\n            android: ['android','android studio'],\n            swift: ['swift','iOS'],\n            flutter: ['flutter'],\n            dart: ['dart'],\n            perl: ['perl'],\n            ruby: ['ruby'],\n            rust: ['rust'],\n            docker: ['docker','container'],\n            kubernates: ['kubernates'],\n            html: ['html','html5'],\n            javascript: ['javascript'],\n            reactjs: ['reactjs','reactJS'],\n            nodejs: ['node','nodejs','nodeJS'],\n            php: ['php'],\n        }\n        var logoURL = OtherSVG;\n        var logoName = \"other\"\n        for(var key in logosDict){\n            if(logosDict[key].includes(this.state.tempSkill)){\n                var logoName = key;\n            }\n        }\n\n        if(logoName === \"amazon\"){ logoURL = AWSSVG }\n        if(logoName === \"angularjs\"){ logoURL = AngularjsSVG }\n        if(logoName === \"apache\"){ logoURL = ApacheSVG }\n        if(logoName === \"appcelerator\"){ logoURL = AppceleratorSVG }\n        if(logoName === \"atom\"){ logoURL = AtomSVG }\n        if(logoName === \"babel\"){ logoURL = BabelSVG }\n        if(logoName === \"backbonejs\"){ logoURL = BackBonejsSVG }\n        if(logoName === \"bitbucket\"){ logoURL = BitBucketSVG }\n        if(logoName === \"bootstrap\"){ logoURL = BootStrapSVG }\n        if(logoName === \"c\"){ logoURL = CSVG }\n        if(logoName === \"codeigniter\"){ logoURL = CodeIgniterSVG }\n        if(logoName === \"cplusplus\"){ logoURL = CPlusPlusSVG }\n        if(logoName === \"csharp\"){ logoURL = CSharpSVG }\n        if(logoName === \"css3\"){ logoURL = CSS3SVG }\n        if(logoName === \"python\"){ logoURL = PythonSVG }\n        if(logoName === \"java\"){ logoURL = JavaSVG }\n        if(logoName === \"android\"){ logoURL = AndroidSVG }\n        if(logoName === \"swift\"){ logoURL = SwiftSVG }\n        if(logoName === \"flutter\"){ logoURL = FlutterSVG }\n        if(logoName === \"dart\"){ logoURL = DartSVG }\n        if(logoName === \"perl\"){ logoURL = PerlSVG }\n        if(logoName === \"ruby\"){ logoURL = RubySVG }\n        if(logoName === \"rust\"){ logoURL = RustSVG }\n        if(logoName === \"docker\"){ logoURL = DockerSVG }\n        if(logoName === \"kubernates\"){ logoURL = KubernatesSVG }\n        if(logoName === \"html\"){ logoURL = HtmlSVG }\n        if(logoName === \"javascript\"){ logoURL = JavaScriptSVG }\n        if(logoName === \"reactjs\"){ logoURL = ReactjsSVG }\n        if(logoName === \"nodejs\"){ logoURL = NodejsSVG }\n        if(logoName === \"php\"){ logoURL = PHPSVG }\n\n        var keyvalue = this.state.skillCount;\n        var keyvalue = keyvalue + 1;\n        this.setState({\n            skills: this.state.skills.concat({key:keyvalue, imageURL: logoURL, imageText:`${this.state.tempSkill}`}),\n            skillCount: keyvalue,\n            tempSkill: \"\",\n        });\n    }\n\n    \n    removeSkillss = (id) => {\n        console.log(id);\n        this.setState({skills: this.state.skills.filter(\n            skill => { return skill.key !== id}\n        )})\n    }\n\n    renderSkill() {\n        if(this.state.isEdit){\n            return(\n                <div className=\"edit-skill\">\n                    <div className=\"add-new-skill\">\n                        <FormInput placeholder=\"Skill\" value={this.state.tempSkill} onChange={(e)=> {this.setState({tempSkill: e.target.value})}}/>\n                        <CustomButton title=\"Add Skill\" onClick={this.addSkill} />\n                    </div>\n                    <br />\n                    <VerticalScroll height=\"380px\">\n                        <div className=\"modify-grid\">\n                            <CardGrid gridColumn=\"1fr 1fr 1fr 1fr\">\n                                {\n                                    this.state.skills.map((skill) => (\n                                        <div className=\"remove-skill-card\">\n                                            <SkillCard id={skill.key} imageURL={skill.imageURL} imageText={skill.imageText} />\n                                            <CancelButton onClick={e => this.removeSkillss(skill.key)}/>\n                                        </div>\n                                    ))\n                                }\n                            </CardGrid>\n                        </div>\n                    </VerticalScroll>\n                </div>\n            )\n        }\n        else{\n            return(\n                <VerticalScroll height=\"450px\">\n                    <div className=\"modify-grid\">\n                        <CardGrid gridColumn=\"1fr 1fr 1fr 1fr\">\n                            {\n                                this.state.skills.map((skill) => (\n                                    <SkillCard id={skill.key} imageURL={skill.imageURL} imageText={skill.imageText} isRemove=\"false\"/>\n                                ))\n                            }\n                        </CardGrid>\n                    </div>\n                </VerticalScroll>\n            )\n        }\n    }\n\n\n    render() {\n\n        return(\n            <div className=\"user-profile\">\n                    <div className=\"profile-header\">\n                        <TextCard text=\"User Profile\" />        \n                        {this.renderSaveButton()}\n                    </div>\n                    <br/><br/>\n                <Card>\n                    <div className=\"general-section\">\n                        <CardGrid gridColumn=\"1fr 1fr\">\n                            <Card>\n                                <h2 className=\"inner-header\">General Profile</h2>\n                                {this.renderGeneralProfile()}\n                            </Card>\n                            <Card>\n                                <h2 className=\"inner-header\">Skill</h2>\n                                {this.renderSkill()}\n                            </Card>\n                                \n                    </CardGrid>\n                    </div>\n                    <br/><br />\n                    <div className=\"user-bookmark\">\n                        <Card>\n                            <h2 className=\"inner-header\">BookMark Projects</h2>\n                            <VerticalScroll height=\"300px\">\n                                <br />\n                                <CardGrid gridColumn=\"1fr 1fr 1fr\">\n                                    {\n                                        this.state.bookmarks.map((bookmark) => (\n                                            <BookmarkCard projectTitle={bookmark.projectTitle} projectDescription={bookmark.projectDescription}>\n                                                <CustomButton title=\"Remove\" onClick={() => {this.setState({\n                                                    bookmarks: this.state.bookmarks.filter(removeBookmark => {\n                                                        return removeBookmark.projectTitle !== bookmark.projectTitle\n                                                    })\n                                                });\n                                                this.removeNotification()\n                                                }}/>\n                                            </BookmarkCard>\n                                        ))\n                                    }\n                                </CardGrid>\n                            </VerticalScroll>\n                        </Card>\n                    </div>\n                    <br /><br />\n                    <div className=\"user-contribution\">\n                        <Card>\n                            <h2 className=\"inner-header\">Contributions</h2>\n                            <VerticalScroll height=\"300px\">\n                                <br />\n                                <CardGrid gridColumn=\"1fr 1fr 1fr\">\n                                    {\n                                        this.state.contributions.map((contribution) => (\n                                            <ContributionCard projectTitle={contribution.projectTitle} projectDescription={contribution.projectDescription} />\n                                        ))\n                                    }\n                                </CardGrid>\n                            </VerticalScroll>\n                        </Card>\n                    </div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default UserProfile;","/home/matrix11/Project/client/src/pages/notification/notification.component.jsx",["153"],"import React from 'react';\nimport './notification.style.scss';\n\nimport CardGrid from '../../components/cardgrid/cardgrid.component';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport TextCard from '../../components/text-card/text-card.component';\nimport Card from '../../components/card/card.component';\nimport VerticalScroll from '../../components/vertical-scroll/vertical-scroll.component';\nimport ProjectCardView from '../../components/projectcardview/projectcardview.component';\nimport CardList from '../../components/cardlist/cardlist.component';\nimport CollabrationNotificationCard from '../../components/collabration-notification-card/collabration-notification-card.component';\nimport ContributionNotificationCard from '../../components/contribution-notification-card/contribution-notification-card.component';\n\nclass Notification extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            collabrations: [\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                }\n            ],\n            contributions: [\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                }\n            ]\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"notification\">\n                <TextCard text=\"Notifications\" />\n                <br /><br />\n                    <CardGrid gridColumn=\"1fr 1fr\">\n                        <Card>\n                            <h2 className=\"inner-header\">Collabration Requests</h2>\n                            <VerticalScroll height=\"520px\">\n                                <CardList>\n                                    {\n                                        this.state.collabrations.map(collabration => (\n                                            <CollabrationNotificationCard user={collabration.user} requestedProject={collabration.requestedProject}>\n                                                <CustomButton title=\"Accept\" />\n                                                <CustomButton title=\"Reject\" />\n                                            </CollabrationNotificationCard>\n                                        ))\n                                    }\n                                </CardList>\n                            </VerticalScroll>\n                        </Card>\n                        <Card>\n                            <h2 className=\"inner-header\">Contribution Requests</h2>\n                            <VerticalScroll height=\"520px\">\n                                <CardList>\n                                    {\n                                        this.state.contributions.map(contribution => (\n                                            <ContributionNotificationCard requestedProject={contribution.requestedProject} status={contribution.status}>\n                                                <CustomButton title=\"Remove\" />\n                                            </ContributionNotificationCard>\n                                        ))\n                                    }\n                                </CardList>\n                            </VerticalScroll>\n                        </Card>\n                    </CardGrid>\n            </div>\n        );\n    }\n}\n\nexport default Notification;","/home/matrix11/Project/client/src/components/collabration-notification-card/collabration-notification-card.component.jsx",[],["154","155"],"/home/matrix11/Project/client/src/pages/404Page/404Page.component.jsx",[],"/home/matrix11/Project/client/src/components/text-card/text-card.component.jsx",[],"/home/matrix11/Project/client/src/components/form-textbox/form-textbox.component.jsx",[],"/home/matrix11/Project/client/src/components/custom-button/custom-button.component.jsx",[],"/home/matrix11/Project/client/src/pages/search-page/search-page.component.jsx",[],"/home/matrix11/Project/client/src/components/custom-button-card/custom-button-card.component.jsx",[],"/home/matrix11/Project/client/src/components/project-edit-skill/project-edit-skill.component.jsx",[],"/home/matrix11/Project/client/src/components/card/card.component.jsx",[],"/home/matrix11/Project/client/src/pages/user-project/user-project.component.jsx",["156","157","158","159"],"import React from 'react';\nimport './user-project.style.scss';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport TextCard from '../../components/text-card/text-card.component';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport CardGrid from '../../components/cardgrid/cardgrid.component';\nimport CardList from '../../components/cardlist/cardlist.component';\nimport Card from '../../components/card/card.component';\nimport ProjectCardView from '../../components/projectcardview/projectcardview.component';\nimport VerticalScroll from '../../components/vertical-scroll/vertical-scroll.component';\nimport SkillCard from '../../components/skill-card/skill-card.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport ProjectEditSkill from '../../components/project-edit-skill/project-edit-skill.component';\nimport CancelButton from '../../components/cancel-button/cancel-button.component';\nimport FormTextbox from '../../components/form-textbox/form-textbox.component';\n\n\nclass UserProject extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            isAddProject: false,\n            isEditProject: false,\n            editProjectKey: null,\n            tempSkill: \"\",\n            newProjectTitle: \"\",\n            newProjectDescription: \"\",\n            newProjectURL: \"\",\n            newProjectSkills: [],\n            projects: [\n                {\n                    title: \"project-1\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\",\"python\",\"reactJS\",\"python\",\"reactJS\",\"python\",\"reactJS\",\"python\",\"reactJS\",\"python\",\"reactJS\",\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-2\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-3\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-4\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-5\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-6\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-7\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-8\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n            ]\n        }\n    }\n\n    resetKey() {\n        this.state.projects.forEach((project, i) => {\n            project.key = i+1\n        })\n    }\n\n    removeProject = (id) => {\n        this.setState({projects: this.state.projects.filter(\n            project => {return project.key !== id}\n        )})\n    }\n\n    addSkill = (id) => {\n        this.setState(({projects}) => ({\n            projects: [\n                ...projects.slice(0,id),\n                {\n                    ...projects[id],\n                    skills: this.state.projects[id].skills.concat(this.state.tempSkill),\n                },\n                ...projects.slice(id+1)\n            ],\n            tempSkill: \"\",\n        }))\n    }\n\n    removeSkill = (remove_skill,id) => {\n        this.setState(({projects}) => ({\n            projects: [\n                ...projects.slice(0,id),\n                {\n                    ...projects[id],\n                    skills: this.state.projects[id].skills.filter(\n                        skill => { return skill !== remove_skill}\n                    )\n                },\n                ...projects.slice(id+1)\n            ]\n        }))\n    }\n\n    editProjectDetails = (id) => {\n        return(\n            <div className=\"edit-project-section\">\n                <br />\n                <CardGrid gridColumn=\"1fr 1fr\">\n                    <Card>\n                        <VerticalScroll height=\"500px\">\n                            <div className=\"title-section\">\n                                <div className=\"title-card\">\n                                    <Card><h3>Title</h3></Card>\n                                </div>\n                                <FormInput placeholder=\"Enter Title\" value={this.state.projects[id].title} onChange={(e) => {\n                                    this.setState(({projects}) => ({\n                                        projects: [\n                                            ...projects.slice(0,id),\n                                            {\n                                                ...projects[id],\n                                                title: e.target.value,\n                                            },\n                                            ...projects.slice(id+1)\n                                        ]\n                                    }))\n                                }} />\n                            </div>\n                            <br /><br />\n                            <div className=\"description-section\">\n                                <div className=\"title-card\">\n                                    <Card><h3>Description</h3></Card>\n                                </div>\n                                <FormInput placeholder=\"Enter Description\" value={this.state.projects[id].description} onChange={(e) => {\n                                    this.setState(({projects}) => ({\n                                        projects: [\n                                            ...projects.slice(0,id),\n                                            {\n                                                ...projects[id],\n                                                description: e.target.value,\n                                            },\n                                            ...projects.slice(id+1)\n                                        ]\n                                    }))\n                                }} />\n                            </div>\n                        </VerticalScroll>\n                    </Card>\n                    <Card>\n                        <h2 className=\"inner-header\">Required Skill</h2>\n                        <div className=\"add-new-skill\">\n                            <FormInput placeholder=\"Skill\" value={this.state.tempSkill} onChange={e => {this.setState({tempSkill: e.target.value})}} />\n                            <CustomButton title=\"Add Skill\" onClick={() => this.addSkill(id)}/>\n                        </div>\n                        <br /><br />\n                        <div className=\"user-project-edit-skill\">\n                            <VerticalScroll height=\"300px\">\n                                <CardGrid gridColumn=\"1fr 1fr 1fr\">\n                                    {\n                                        this.state.projects[id].skills.map(skill => {\n                                            return (\n                                                <ProjectEditSkill skill={skill}>\n                                                    <CancelButton onClick={() => this.removeSkill(skill,id)} />\n                                                </ProjectEditSkill>   \n                                            )\n                                        })\n                                    }\n                                </CardGrid>\n                            </VerticalScroll>\n                        </div>\n                    </Card>\n                </CardGrid>\n                <br/>\n                <div className=\"custom-save\">\n                    <CustomButton title=\"Save Details\" onClick={() => {this.setState({isEditProject: false}); this.successNotification()}} />\n                </div>\n            </div>\n        )\n    }\n\n    addNewProject = () => {\n        return(\n            <div className=\"add-project-section\">\n                <br/>\n                <CardGrid gridColumn=\"1fr 1fr\">\n                    <Card>\n                        <VerticalScroll height=\"500px\">\n                            <div className=\"title-section\">\n                                <div className=\"title-card\">\n                                    <Card><h3>Title</h3></Card>\n                                </div>\n                                <FormInput placeholder=\"Enter Title\" value={this.state.newProjectTitle} onChange={(e) => {this.setState({newProjectTitle: e.target.value})}} />\n                            </div>\n                            <br /><br />\n                            <div className=\"description-section\">\n                                <div className=\"title-card\">\n                                    <Card><h3>Description</h3></Card>\n                                </div>\n                                <FormInput placeholder=\"Enter Description\" value={this.state.newProjectDescription} onChange={(e) => {this.setState({newProjectDescription: e.target.value})}} />\n                            </div>\n                            <br /><br />\n                            <div className=\"project-url-section\">\n                                <div className=\"title-card\">\n                                    <Card><h3>Description</h3></Card>\n                                </div>\n                                <FormInput placeholder=\"Enter Project URL\" value={this.state.newProjectURL} onChange={(e) => {this.setState({newProjectURL: e.target.value})}} />\n                            </div>\n                        </VerticalScroll>\n                    </Card>\n                    <Card>\n                        <h2 className=\"inner-header\">Required Skill</h2>\n                        <div className=\"add-new-skill\">\n                            <FormInput placeholder=\"Skill\" value={this.state.tempSkill} onChange={e => {this.setState({tempSkill: e.target.value})}} />\n                            <CustomButton title=\"Add Skill\" onClick={() => {this.setState({newProjectSkills: this.state.newProjectSkills.concat(this.state.tempSkill), tempSkill: \"\"})}}/>\n                        </div>\n                        <br /><br />\n                        <div className=\"user-project-edit-skill\">\n                            <VerticalScroll height=\"300px\">\n                                <CardGrid gridColumn=\"1fr 1fr 1fr\">\n                                    {\n                                        this.state.newProjectSkills.map(skill => {\n                                            return (\n                                                <ProjectEditSkill skill={skill}>\n                                                    <CancelButton onClick={() => {this.setState({newProjectSkills: this.state.newProjectSkills.filter(\n                                                        (newSkill) => {return newSkill !== skill}\n                                                    )})}} />\n                                                </ProjectEditSkill>   \n                                            )\n                                        })\n                                    }\n                                </CardGrid>\n                            </VerticalScroll>\n                        </div>\n                    </Card>\n                </CardGrid>\n                <br />\n                <div className=\"add-remove-project\">\n                    <CardGrid gridColumn=\"1fr 1fr\">\n                        <div className=\"custom-save\">\n                            <CustomButton title=\"Save Details\" onClick={() => {this.setState({\n                                isAddProject: false,\n                                projects: this.state.projects.concat({\n                                    title: this.state.newProjectTitle,\n                                    description: this.state.newProjectDescription,\n                                    skills: this.state.newProjectSkills\n                                }),\n                                newProjectTitle: \"\",\n                                newProjectDescription: \"\",\n                                newProjectSkills: [],\n                                newProjectURL: \"\",\n                            });\n                            this.successNotification()\n                            }} />\n                        </div>\n                        <div className=\"discard-save\">\n                            <CustomButton title=\"Discard Project\" onClick={() => {this.setState({\n                                isAddProject: false,\n                                newProjectTitle: \"\",\n                                newProjectDescription: \"\",\n                                newProjectSkills: [],\n                                newProjectURL: \"\"\n                            });\n                            this.discardNotification()\n                            }} />\n                        </div>\n                    </CardGrid>\n                </div>\n            </div>\n        )\n    }\n\n    renderProjects() {\n        return(\n            <div className=\"projects-section\">\n                <VerticalScroll height=\"600px\">\n                    <CardList>\n                        {\n                            this.state.projects.map(project => (\n                                <ProjectCardView projectTitle={project.title} projectDescription={project.description} projectSkill={project.skills}>\n                                    <CardGrid gridColumn=\"1fr 1fr\">\n                                        <CustomButton title=\"Edit Details\" onClick={() => (this.resetKey(),this.setState({isEditProject: true, editProjectKey: project.key}))} />\n                                        <CustomButton title=\"Remove Project\" onClick={() => (this.resetKey(),this.removeProject(project.key), this.removeNotification())} />\n                                    </CardGrid>\n                                </ProjectCardView>\n                            ))\n                        }\n                    </CardList>\n                </VerticalScroll>\n            </div>\n        )\n    }\n\n    renderChoice() {\n        if(this.state.isEditProject){\n            return(\n                this.editProjectDetails(this.state.editProjectKey - 1)\n            )\n        }\n        else{\n            if(this.state.isAddProject){\n                return(\n                    this.addNewProject()\n                )\n            }\n            else{\n                return(\n                    this.renderProjects()\n                )\n            }\n        }\n    }\n\n    successNotification() {\n        toast.success(\"Project Successfully Saved.\")\n    }\n\n    discardNotification() {\n        toast.warning(\"Project Details Discard.\")\n    }\n\n    removeNotification() {\n        toast.error(\"Project Removed.\")\n    }\n\n    renderMainButton() {\n        if(this.state.isEditProject){\n            return(\n                <CustomButton title=\"Save Details\" onClick={() => {this.setState({isEditProject: false}); this.successNotification()}} />\n            )\n        }\n        else{\n            if(this.state.isAddProject){\n                <CustomButton title=\"Save Details\" onClick={() => {this.setState({isAddProject: false}); this.successNotification()}} />\n            }\n            else{\n                return(\n                    <CustomButton title=\"Add Project\" onClick={() => {this.setState({isAddProject: true})}} />\n                )\n            }\n        }\n    }\n\n    render() {\n        toast.configure();\n        return(\n            <div className=\"user-project\">\n                <div className=\"project-header\">\n                    <TextCard text=\"Projects\" />        \n                    {this.renderMainButton()}\n                </div>\n                <br /><br />\n                <Card>\n                    {this.renderChoice()}\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default UserProject;","/home/matrix11/Project/client/src/components/contribution-card/contribution-card.component.jsx",[],"/home/matrix11/Project/client/src/components/cardlist/cardlist.component.jsx",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":2,"column":16,"nodeType":"166","messageId":"167","endLine":2,"endColumn":29},{"ruleId":"164","severity":1,"message":"168","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":20},{"ruleId":"164","severity":1,"message":"169","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":22},{"ruleId":"164","severity":1,"message":"170","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":23},{"ruleId":"164","severity":1,"message":"171","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":22},{"ruleId":"164","severity":1,"message":"172","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":16},{"ruleId":"164","severity":1,"message":"173","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":16},{"ruleId":"164","severity":1,"message":"174","line":10,"column":8,"nodeType":"166","messageId":"167","endLine":10,"endColumn":12},{"ruleId":"164","severity":1,"message":"175","line":12,"column":8,"nodeType":"166","messageId":"167","endLine":12,"endColumn":14},{"ruleId":"164","severity":1,"message":"176","line":13,"column":8,"nodeType":"166","messageId":"167","endLine":13,"endColumn":17},{"ruleId":"164","severity":1,"message":"177","line":16,"column":8,"nodeType":"166","messageId":"167","endLine":16,"endColumn":24},{"ruleId":"164","severity":1,"message":"178","line":17,"column":8,"nodeType":"166","messageId":"167","endLine":17,"endColumn":20},{"ruleId":"160","replacedBy":"179"},{"ruleId":"162","replacedBy":"180"},{"ruleId":"160","replacedBy":"181"},{"ruleId":"162","replacedBy":"182"},{"ruleId":"164","severity":1,"message":"168","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":20},{"ruleId":"164","severity":1,"message":"183","line":5,"column":17,"nodeType":"166","messageId":"167","endLine":5,"endColumn":26},{"ruleId":"164","severity":1,"message":"168","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":20},{"ruleId":"160","replacedBy":"184"},{"ruleId":"162","replacedBy":"185"},{"ruleId":"164","severity":1,"message":"178","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":20},{"ruleId":"160","replacedBy":"186"},{"ruleId":"162","replacedBy":"187"},{"ruleId":"164","severity":1,"message":"172","line":10,"column":8,"nodeType":"166","messageId":"167","endLine":10,"endColumn":16},{"ruleId":"164","severity":1,"message":"170","line":12,"column":8,"nodeType":"166","messageId":"167","endLine":12,"endColumn":23},{"ruleId":"164","severity":1,"message":"188","line":54,"column":8,"nodeType":"166","messageId":"167","endLine":54,"endColumn":15},{"ruleId":"189","severity":1,"message":"190","line":392,"column":21,"nodeType":"166","messageId":"191","endLine":392,"endColumn":29},{"ruleId":"189","severity":1,"message":"192","line":428,"column":13,"nodeType":"166","messageId":"191","endLine":428,"endColumn":21},{"ruleId":"164","severity":1,"message":"170","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":23},{"ruleId":"160","replacedBy":"193"},{"ruleId":"162","replacedBy":"194"},{"ruleId":"164","severity":1,"message":"176","line":14,"column":8,"nodeType":"166","messageId":"167","endLine":14,"endColumn":17},{"ruleId":"164","severity":1,"message":"195","line":18,"column":8,"nodeType":"166","messageId":"167","endLine":18,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":296,"column":107,"nodeType":"198","messageId":"199","endLine":296,"endColumn":108},{"ruleId":"196","severity":1,"message":"197","line":297,"column":109,"nodeType":"198","messageId":"199","endLine":297,"endColumn":110},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'CustomButton' is defined but never used.","'VerticalScroll' is defined but never used.","'ProjectCardView' is defined but never used.","'NeumorphicText' is defined but never used.","'CardList' is defined but never used.","'CardGrid' is defined but never used.","'Card' is defined but never used.","'AWSSVG' is defined but never used.","'SkillCard' is defined but never used.","'ProjectEditSkill' is defined but never used.","'CancelButton' is defined but never used.",["200"],["201"],["200"],["201"],"'Component' is defined but never used.",["200"],["201"],["200"],["201"],"'PlusSVG' is defined but never used.","no-redeclare","'logoName' is already defined.","redeclared","'keyvalue' is already defined.",["200"],["201"],"'FormTextbox' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]