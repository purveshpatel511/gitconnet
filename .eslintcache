[{"/home/matrix11/Project/client/src/index.js":"1","/home/matrix11/Project/client/src/components/header/header.component.jsx":"2","/home/matrix11/Project/client/src/App.js":"3","/home/matrix11/Project/client/src/components/form-input/form-input.component.jsx":"4","/home/matrix11/Project/client/src/components/bookmark-card/bookmark-card.component.jsx":"5","/home/matrix11/Project/client/src/components/contribution-notification-card/contribution-notification-card.component.jsx":"6","/home/matrix11/Project/client/src/reportWebVitals.js":"7","/home/matrix11/Project/client/src/components/projectcardview/projectcardview.component.jsx":"8","/home/matrix11/Project/client/src/components/vertical-scroll/vertical-scroll.component.jsx":"9","/home/matrix11/Project/client/src/components/neumorphic-text/neumorphic-text.component.jsx":"10","/home/matrix11/Project/client/src/components/cardgrid/cardgrid.component.jsx":"11","/home/matrix11/Project/client/src/components/skill-card/skill-card.component.jsx":"12","/home/matrix11/Project/client/src/components/cancel-button/cancel-button.component.jsx":"13","/home/matrix11/Project/client/src/pages/user-profile/user-profile.component.jsx":"14","/home/matrix11/Project/client/src/pages/notification/notification.component.jsx":"15","/home/matrix11/Project/client/src/components/collabration-notification-card/collabration-notification-card.component.jsx":"16","/home/matrix11/Project/client/src/pages/404Page/404Page.component.jsx":"17","/home/matrix11/Project/client/src/components/text-card/text-card.component.jsx":"18","/home/matrix11/Project/client/src/components/form-textbox/form-textbox.component.jsx":"19","/home/matrix11/Project/client/src/components/custom-button/custom-button.component.jsx":"20","/home/matrix11/Project/client/src/pages/search-page/search-page.component.jsx":"21","/home/matrix11/Project/client/src/components/custom-button-card/custom-button-card.component.jsx":"22","/home/matrix11/Project/client/src/components/project-edit-skill/project-edit-skill.component.jsx":"23","/home/matrix11/Project/client/src/components/card/card.component.jsx":"24","/home/matrix11/Project/client/src/pages/user-project/user-project.component.jsx":"25","/home/matrix11/Project/client/src/components/contribution-card/contribution-card.component.jsx":"26","/home/matrix11/Project/client/src/components/cardlist/cardlist.component.jsx":"27","/home/matrix11/Project/client/src/components/form-textarea/form-textarea.component.jsx":"28"},{"size":501,"mtime":1609403711628,"results":"29","hashOfConfig":"30"},{"size":1037,"mtime":1611343847048,"results":"31","hashOfConfig":"30"},{"size":1073,"mtime":1611857871312,"results":"32","hashOfConfig":"30"},{"size":359,"mtime":1611856816205,"results":"33","hashOfConfig":"30"},{"size":375,"mtime":1610553306756,"results":"34","hashOfConfig":"30"},{"size":495,"mtime":1610562702297,"results":"35","hashOfConfig":"30"},{"size":362,"mtime":1609323110408,"results":"36","hashOfConfig":"30"},{"size":1560,"mtime":1611950120239,"results":"37","hashOfConfig":"30"},{"size":542,"mtime":1609401413899,"results":"38","hashOfConfig":"30"},{"size":211,"mtime":1609493295347,"results":"39","hashOfConfig":"30"},{"size":270,"mtime":1609578620386,"results":"40","hashOfConfig":"30"},{"size":424,"mtime":1610193279648,"results":"41","hashOfConfig":"30"},{"size":238,"mtime":1610186267952,"results":"42","hashOfConfig":"30"},{"size":26598,"mtime":1611885916466,"results":"43","hashOfConfig":"30"},{"size":5661,"mtime":1610562711376,"results":"44","hashOfConfig":"30"},{"size":500,"mtime":1610561918487,"results":"45","hashOfConfig":"30"},{"size":487,"mtime":1609493676776,"results":"46","hashOfConfig":"30"},{"size":246,"mtime":1609574656041,"results":"47","hashOfConfig":"30"},{"size":432,"mtime":1610491844967,"results":"48","hashOfConfig":"30"},{"size":259,"mtime":1610131474922,"results":"49","hashOfConfig":"30"},{"size":8799,"mtime":1611950128959,"results":"50","hashOfConfig":"30"},{"size":354,"mtime":1611885718265,"results":"51","hashOfConfig":"30"},{"size":458,"mtime":1610372938320,"results":"52","hashOfConfig":"30"},{"size":200,"mtime":1609520519657,"results":"53","hashOfConfig":"30"},{"size":19069,"mtime":1611860565309,"results":"54","hashOfConfig":"30"},{"size":337,"mtime":1610553448816,"results":"55","hashOfConfig":"30"},{"size":204,"mtime":1609402479359,"results":"56","hashOfConfig":"30"},{"size":392,"mtime":1611857932030,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1j6ipkc",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/home/matrix11/Project/client/src/index.js",[],["127","128"],"/home/matrix11/Project/client/src/components/header/header.component.jsx",["129"],"import React from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom';\nimport './header.style.scss';\n\nimport CustomButton from '../custom-button/custom-button.component';\n\nconst Header = () => {\n    return(\n        <nav className=\"header\">\n            <div className=\"logo\">\n                <CustomButton title=\"GitConnect\" />\n            </div>\n            <div className=\"options\">\n                <Link to=\"/\">\n                    <CustomButton title=\"Search\" />\n                </Link>\n                <Link to=\"/profile\">\n                    <CustomButton title=\"Profile\" />\n                </Link>\n                <Link to=\"/projects\">\n                    <CustomButton title=\"Project\" />\n                </Link>\n                <Link to=\"/notifications\">\n                    <CustomButton title=\"Notification\" />\n                </Link>\n                <Link to=\"/signout\">\n                    <CustomButton title=\"Sign out\" />\n                </Link>\n            </div>\n        </nav>\n    );\n}\n\nexport default Header;","/home/matrix11/Project/client/src/App.js",[],"/home/matrix11/Project/client/src/components/form-input/form-input.component.jsx",[],["130","131"],"/home/matrix11/Project/client/src/components/bookmark-card/bookmark-card.component.jsx",[],["132","133"],"/home/matrix11/Project/client/src/components/contribution-notification-card/contribution-notification-card.component.jsx",[],"/home/matrix11/Project/client/src/reportWebVitals.js",[],["134","135"],"/home/matrix11/Project/client/src/components/projectcardview/projectcardview.component.jsx",["136"],"/home/matrix11/Project/client/src/components/vertical-scroll/vertical-scroll.component.jsx",["137","138"],"// This is VerticalScroll Component.\n// Every Component that will be display in vertical\n// scroll view that will be disply by this Component.\n\nimport React, { Component } from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport './vertical-scroll.style.scss'\n\nconst VerticalScroll = (props) => {\n    \n    return(\n        <div \n            className=\"vertical-scroll\"\n            style = {{height: props.height,}}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nexport default VerticalScroll;",["139","140"],"/home/matrix11/Project/client/src/components/neumorphic-text/neumorphic-text.component.jsx",[],"/home/matrix11/Project/client/src/components/cardgrid/cardgrid.component.jsx",[],"/home/matrix11/Project/client/src/components/skill-card/skill-card.component.jsx",["141"],"import React from 'react';\nimport './skill-card.style.scss';\n\nimport CancelButton from '../cancel-button/cancel-button.component';\n\nconst SkillCard = ({imageURL, imageText, id}) => {\n    return (\n        <div id={id} className=\"skill-card\">\n            <img className=\"skill-svg\" src={imageURL} alt={imageText} />\n            <span className=\"skill-name\">{imageText}</span>\n        </div>\n    );\n}\n\nexport default SkillCard;","/home/matrix11/Project/client/src/components/cancel-button/cancel-button.component.jsx",[],"/home/matrix11/Project/client/src/pages/user-profile/user-profile.component.jsx",["142","143","144","145","146"],"/home/matrix11/Project/client/src/pages/notification/notification.component.jsx",["147"],"import React from 'react';\nimport './notification.style.scss';\n\nimport CardGrid from '../../components/cardgrid/cardgrid.component';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport TextCard from '../../components/text-card/text-card.component';\nimport Card from '../../components/card/card.component';\nimport VerticalScroll from '../../components/vertical-scroll/vertical-scroll.component';\nimport ProjectCardView from '../../components/projectcardview/projectcardview.component';\nimport CardList from '../../components/cardlist/cardlist.component';\nimport CollabrationNotificationCard from '../../components/collabration-notification-card/collabration-notification-card.component';\nimport ContributionNotificationCard from '../../components/contribution-notification-card/contribution-notification-card.component';\n\nclass Notification extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            collabrations: [\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                }\n            ],\n            contributions: [\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                }\n            ]\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"notification\">\n                <TextCard text=\"Notifications\" />\n                <br /><br />\n                    <CardGrid gridColumn=\"1fr 1fr\">\n                        <Card>\n                            <h2 className=\"inner-header\">Collabration Requests</h2>\n                            <VerticalScroll height=\"520px\">\n                                <CardList>\n                                    {\n                                        this.state.collabrations.map(collabration => (\n                                            <CollabrationNotificationCard user={collabration.user} requestedProject={collabration.requestedProject}>\n                                                <CustomButton title=\"Accept\" />\n                                                <CustomButton title=\"Reject\" />\n                                            </CollabrationNotificationCard>\n                                        ))\n                                    }\n                                </CardList>\n                            </VerticalScroll>\n                        </Card>\n                        <Card>\n                            <h2 className=\"inner-header\">Contribution Requests</h2>\n                            <VerticalScroll height=\"520px\">\n                                <CardList>\n                                    {\n                                        this.state.contributions.map(contribution => (\n                                            <ContributionNotificationCard requestedProject={contribution.requestedProject} status={contribution.status}>\n                                                <CustomButton title=\"Remove\" />\n                                            </ContributionNotificationCard>\n                                        ))\n                                    }\n                                </CardList>\n                            </VerticalScroll>\n                        </Card>\n                    </CardGrid>\n            </div>\n        );\n    }\n}\n\nexport default Notification;","/home/matrix11/Project/client/src/components/collabration-notification-card/collabration-notification-card.component.jsx",[],"/home/matrix11/Project/client/src/pages/404Page/404Page.component.jsx",[],"/home/matrix11/Project/client/src/components/text-card/text-card.component.jsx",[],["148","149"],"/home/matrix11/Project/client/src/components/form-textbox/form-textbox.component.jsx",[],"/home/matrix11/Project/client/src/components/custom-button/custom-button.component.jsx",[],"/home/matrix11/Project/client/src/pages/search-page/search-page.component.jsx",["150"],"/home/matrix11/Project/client/src/components/custom-button-card/custom-button-card.component.jsx",["151"],"import React from 'react';\nimport './custom-button-card.style.scss';\n\nconst CustomButtonCard = ({classname, imageURL, imageText, url}) => {\n    return(\n        <a className=\"custom-button-card\" href={url} target=\"_blank\">\n                <img className={classname} src={imageURL} alt={imageText} />\n        </a>\n    );\n}\n\nexport default CustomButtonCard;","/home/matrix11/Project/client/src/components/project-edit-skill/project-edit-skill.component.jsx",[],"/home/matrix11/Project/client/src/components/card/card.component.jsx",[],"/home/matrix11/Project/client/src/pages/user-project/user-project.component.jsx",["152","153","154","155"],"import React from \"react\";\nimport \"./user-project.style.scss\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Select from \"react-select\";\n\nimport TextCard from \"../../components/text-card/text-card.component\";\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\nimport CardGrid from \"../../components/cardgrid/cardgrid.component\";\nimport CardList from \"../../components/cardlist/cardlist.component\";\nimport Card from \"../../components/card/card.component\";\nimport ProjectCardView from \"../../components/projectcardview/projectcardview.component\";\nimport VerticalScroll from \"../../components/vertical-scroll/vertical-scroll.component\";\nimport SkillCard from \"../../components/skill-card/skill-card.component\";\nimport FormInput from \"../../components/form-input/form-input.component\";\nimport ProjectEditSkill from \"../../components/project-edit-skill/project-edit-skill.component\";\nimport CancelButton from \"../../components/cancel-button/cancel-button.component\";\nimport FormTextbox from \"../../components/form-textbox/form-textbox.component\";\nimport FormTextArea from \"../../components/form-textarea/form-textarea.component\";\n\n\nconst customStyles = {\n  menu: (provided, state) => ({\n    ...provided,\n    width: state.selectProps.width,\n    borderBottom: '1px dotted pink',\n    color: state.selectProps.menuColor,\n    padding: 20,\n  }),\n\n  control: (_, { selectProps: { width }}) => ({\n    width: width\n  }),\n\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return { ...provided, opacity, transition };\n  }\n}\n\nclass UserProject extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      isAddProject: false,\n      isEditProject: false,\n      editProjectKey: null,\n      tempSkill: \"\",\n      newProjectTitle: \"\",\n      newProjectDescription: \"\",\n      newProjectURL: \"\",\n      newProjectSkills: [],\n      selectedOption: null,\n      github_projects: [\n        { value: \"project-1\", label: \"project-1\" },\n        { value: \"project-2\", label: \"project-2\" },\n        { value: \"project-3\", label: \"project-3\" },\n        { value: \"project-4\", label: \"project-4\" },\n        { value: \"project-5\", label: \"project-5\" },\n        { value: \"project-6\", label: \"project-6\" },\n        { value: \"project-7\", label: \"project-7\" },\n      ],\n      projects: [\n        {\n          title: \"project-1\",\n          description:\n            \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n          skills: [\n            \"python\",\n            \"reactJS\",\n            \"python\",\n            \"reactJS\",\n            \"python\",\n            \"reactJS\",\n            \"python\",\n            \"reactJS\",\n            \"python\",\n            \"reactJS\",\n            \"python\",\n            \"reactJS\",\n            \"python\",\n            \"reactJS\",\n          ],\n          opening: 11,\n        },\n        {\n          title: \"project-2\",\n          description:\n            \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n          skills: [\"python\", \"reactJS\"],\n          opening: 11,\n        },\n        {\n          title: \"project-3\",\n          description:\n            \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n          skills: [\"python\", \"reactJS\"],\n          opening: 11,\n        },\n        {\n          title: \"project-4\",\n          description:\n            \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n          skills: [\"python\", \"reactJS\"],\n          opening: 11,\n        },\n        {\n          title: \"project-5\",\n          description:\n            \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n          skills: [\"python\", \"reactJS\"],\n          opening: 11,\n        },\n        {\n          title: \"project-6\",\n          description:\n            \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n          skills: [\"python\", \"reactJS\"],\n          opening: 11,\n        },\n        {\n          title: \"project-7\",\n          description:\n            \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n          skills: [\"python\", \"reactJS\"],\n          opening: 11,\n        },\n        {\n          title: \"project-8\",\n          description:\n            \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n          skills: [\"python\", \"reactJS\"],\n          opening: 11,\n        },\n      ],\n    };\n  }\n\n  resetKey() {\n    this.state.projects.forEach((project, i) => {\n      project.key = i + 1;\n    });\n  }\n\n  removeProject = (id) => {\n    this.setState({\n      projects: this.state.projects.filter((project) => {\n        return project.key !== id;\n      }),\n    });\n  };\n\n  addSkill = (id) => {\n    this.state.projects[id].skills.unshift(this.state.tempSkill);\n    this.setState(({ projects }) => ({\n      projects: [\n        ...projects.slice(0, id),\n        {\n          ...projects[id],\n          skills: this.state.projects[id].skills,\n        },\n        ...projects.slice(id + 1),\n      ],\n      tempSkill: \"\",\n    }));\n  };\n\n  removeSkill = (remove_skill, id) => {\n    this.setState(({ projects }) => ({\n      projects: [\n        ...projects.slice(0, id),\n        {\n          ...projects[id],\n          skills: this.state.projects[id].skills.filter((skill) => {\n            return skill !== remove_skill;\n          }),\n        },\n        ...projects.slice(id + 1),\n      ],\n    }));\n  };\n\n  editProjectDetails = (id) => {\n    return (\n      <div className=\"edit-project-section\">\n        <br />\n        <CardGrid gridColumn=\"1fr 1fr\">\n          <Card>\n            <VerticalScroll height=\"500px\">\n              <div className=\"title-section\">\n                <div className=\"title-card\">\n                  <Card>\n                    <h3>Title</h3>\n                  </Card>\n                </div>\n                <div className=\"title-input\">\n                  <FormInput\n                    placeholder=\"Enter Title\"\n                    value={this.state.projects[id].title}\n                    onChange={(e) => {\n                      this.setState(({ projects }) => ({\n                        projects: [\n                          ...projects.slice(0, id),\n                          {\n                            ...projects[id],\n                            title: e.target.value,\n                          },\n                          ...projects.slice(id + 1),\n                        ],\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n              <br />\n              <br />\n              <div className=\"discription-section\">\n                <div className=\"discription-card\">\n                  <Card>\n                    <h3>Description</h3>\n                  </Card>\n                </div>\n                <div className=\"discription-input\">\n                  <FormTextArea\n                    placeholder=\"Enter Description\"\n                    value={this.state.projects[id].description}\n                    onChange={(e) => {\n                      this.setState(({ projects }) => ({\n                        projects: [\n                          ...projects.slice(0, id),\n                          {\n                            ...projects[id],\n                            description: e.target.value,\n                          },\n                          ...projects.slice(id + 1),\n                        ],\n                      }));\n                    }}\n                  />\n                </div>\n              </div>\n                <br />\n                <br />\n                <div className=\"opening-section\">\n                  <div className=\"opening-card\">\n                    <Card>\n                      <h3>Openings</h3>\n                    </Card>\n                  </div>\n                  <div className=\"opening-input\">\n                  <FormInput\n                    placeholder=\"Enter Project Opening\"\n                    value={this.state.projects[id].opening}\n                    onChange={(e) => {\n                      this.setState(({ projects }) => ({\n                        projects: [\n                          ...projects.slice(0, id),\n                          {\n                            ...projects[id],\n                            opening: e.target.value,\n                          },\n                          ...projects.slice(id + 1),\n                        ],\n                      }));\n                    }}\n                  />\n                  </div>\n              </div>\n            </VerticalScroll>\n          </Card>\n          <Card>\n            <h2 className=\"inner-header\">Required Skill</h2>\n            <div className=\"add-new-skill\">\n              <div className=\"add-new-skill-input\">\n              <FormInput\n                placeholder=\"Skill\"\n                value={this.state.tempSkill}\n                onChange={(e) => {\n                  this.setState({ tempSkill: e.target.value });\n                }}\n              />\n              </div>\n              <CustomButton\n                title=\"Add Skill\"\n                onClick={() => this.addSkill(id)}\n              />\n            </div>\n            <br />\n            <br />\n            <div className=\"user-project-edit-skill\">\n              <VerticalScroll height=\"300px\">\n                <CardGrid gridColumn=\"1fr 1fr 1fr\">\n                  {this.state.projects[id].skills.map((skill) => {\n                    return (\n                      <ProjectEditSkill skill={skill}>\n                        <CancelButton\n                          onClick={() => this.removeSkill(skill, id)}\n                        />\n                      </ProjectEditSkill>\n                    );\n                  })}\n                </CardGrid>\n              </VerticalScroll>\n            </div>\n          </Card>\n        </CardGrid>\n        <br />\n        <div className=\"custom-save\">\n          <CustomButton\n            title=\"Save Details\"\n            onClick={() => {\n              this.setState({ isEditProject: false });\n              this.successNotification();\n            }}\n          />\n        </div>\n        <br />\n      </div>\n    );\n  };\n\n  selectProject = (selectedOption) => {\n    this.setState({ newProjectTitle: selectedOption.value });\n  };\n\n  addNewProject = () => {\n    return (\n      <div className=\"add-project-section\">\n        <br />\n        <CardGrid gridColumn=\"1fr 1fr\">\n          <Card>\n            <VerticalScroll height=\"500px\">\n              <div className=\"title-section\">\n                <div className=\"title-card\">\n                  <Card>\n                    <h3>Title</h3>\n                  </Card>\n                </div>\n                <Select\n                  className=\"dropdown\"\n                  options={this.state.github_projects}\n                  onChange={this.selectProject}\n                  placeholder=\"Select Project\"\n                  styles = {customStyles}\n                />\n              </div>\n              <br />\n              <br />\n              <div className=\"discription-section\">\n                <div className=\"discription-card\">\n                  <Card>\n                    <h3>Description</h3>\n                  </Card>\n                </div>\n                <div className=\"discription-input\">\n                <FormTextArea\n                  placeholder=\"Enter Discription\"\n                  value={this.state.newProjectDescription}\n                  onChange={(e) => {\n                    this.setState({ newProjectDescription: e.target.value });\n                  }}\n                />\n                </div>\n              </div>\n              <br />\n              <br />\n              <div className=\"opening-section\">\n                <div className=\"opening-card\">\n                  <Card>\n                    <h3>Openings</h3>\n                  </Card>\n                </div>\n                <div className=\"opening-input\">\n                <FormInput\n                  placeholder=\"Enter Project URL\"\n                  value={this.state.newProjectURL}\n                  onChange={(e) => {\n                    this.setState({ newProjectURL: e.target.value });\n                  }}\n                />\n                </div>\n              </div>\n            </VerticalScroll>\n          </Card>\n          <Card>\n            <h2 className=\"inner-header\">Required Skill</h2>\n            <div className=\"add-new-skill\">\n              <div className=\"add-new-skill-input\">\n              <FormInput\n                placeholder=\"Skill\"\n                value={this.state.tempSkill}\n                onChange={(e) => {\n                  this.setState({ tempSkill: e.target.value });\n                }}\n              />\n              </div>\n              <CustomButton\n                title=\"Add Skill\"\n                onClick={() => {\n                  this.state.newProjectSkills.unshift(this.state.tempSkill);\n                  this.setState({\n                    newProjectSkills: this.state.newProjectSkills,\n                    tempSkill: \"\",\n                  });\n                }}\n              />\n            </div>\n            <br />\n            <br />\n            <div className=\"user-project-edit-skill\">\n              <VerticalScroll height=\"300px\">\n                <CardGrid gridColumn=\"1fr 1fr 1fr\">\n                  {this.state.newProjectSkills.map((skill) => {\n                    return (\n                      <ProjectEditSkill skill={skill}>\n                        <CancelButton\n                          onClick={() => {\n                            this.setState({\n                              newProjectSkills: this.state.newProjectSkills.filter(\n                                (newSkill) => {\n                                  return newSkill !== skill;\n                                }\n                              ),\n                            });\n                          }}\n                        />\n                      </ProjectEditSkill>\n                    );\n                  })}\n                </CardGrid>\n              </VerticalScroll>\n            </div>\n          </Card>\n        </CardGrid>\n        <br />\n        <div className=\"add-remove-project\">\n          <CardGrid gridColumn=\"1fr 1fr\">\n            <div className=\"custom-save\">\n              <CustomButton\n                title=\"Save Details\"\n                onClick={() => {\n                  this.state.projects.unshift({\n                    title: this.state.newProjectTitle,\n                    description: this.state.newProjectDescription,\n                    skills: this.state.newProjectSkills,\n                  });\n                  this.setState({\n                    isAddProject: false,\n                    projects: this.state.projects,\n                    newProjectTitle: \"\",\n                    newProjectDescription: \"\",\n                    newProjectSkills: [],\n                    newProjectURL: \"\",\n                  });\n                  console.log(this.state.projects);\n                  this.successNotification();\n                }}\n              />\n            </div>\n            <div className=\"discard-save\">\n              <CustomButton\n                title=\"Discard Project\"\n                onClick={() => {\n                  this.setState({\n                    isAddProject: false,\n                    newProjectTitle: \"\",\n                    newProjectDescription: \"\",\n                    newProjectSkills: [],\n                    newProjectURL: \"\",\n                  });\n                  this.discardNotification();\n                }}\n              />\n            </div>\n            <br />\n          </CardGrid>\n        </div>\n      </div>\n    );\n  };\n\n  renderProjects() {\n    return (\n      <div className=\"projects-section\">\n        <VerticalScroll height=\"600px\">\n          <CardList>\n            {\n              (console.log(this.state),\n              this.state.projects.map((project) => (\n                <ProjectCardView\n                  projectTitle={project.title}\n                  projectDescription={project.description}\n                  projectSkill={project.skills}\n                  projectOpening={project.opening}\n                >\n                  <CardGrid gridColumn=\"1fr 1fr\">\n                    <CustomButton\n                      title=\"Edit Details\"\n                      onClick={() => (\n                        this.resetKey(),\n                        this.setState({\n                          isEditProject: true,\n                          editProjectKey: project.key,\n                        })\n                      )}\n                    />\n                    <CustomButton\n                      title=\"Remove Project\"\n                      onClick={() => (\n                        this.resetKey(),\n                        this.removeProject(project.key),\n                        this.removeNotification()\n                      )}\n                    />\n                  </CardGrid>\n                </ProjectCardView>\n              )))\n            }\n          </CardList>\n        </VerticalScroll>\n      </div>\n    );\n  }\n\n  renderChoice() {\n    if (this.state.isEditProject) {\n      return this.editProjectDetails(this.state.editProjectKey - 1);\n    } else {\n      if (this.state.isAddProject) {\n        return this.addNewProject();\n      } else {\n        return this.renderProjects();\n      }\n    }\n  }\n\n  successNotification() {\n    toast.success(\"Project Successfully Saved.\");\n  }\n\n  discardNotification() {\n    toast.warning(\"Project Details Discard.\");\n  }\n\n  removeNotification() {\n    toast.error(\"Project Removed.\");\n  }\n\n  renderMainButton() {\n    if (this.state.isEditProject) {\n      return (\n        <CustomButton\n          title=\"Save Details\"\n          onClick={() => {\n            this.setState({ isEditProject: false });\n            this.successNotification();\n          }}\n        />\n      );\n    } else {\n      if (this.state.isAddProject) {\n        <CustomButton\n          title=\"Save Details\"\n          onClick={() => {\n            this.setState({ isAddProject: false });\n            this.successNotification();\n          }}\n        />;\n      } else {\n        return (\n          <CustomButton\n            title=\"Add Project\"\n            onClick={() => {\n              this.setState({ isAddProject: true });\n            }}\n          />\n        );\n      }\n    }\n  }\n\n  render() {\n    toast.configure();\n    return (\n      <div className=\"user-project\">\n        <div className=\"project-header\">\n          <TextCard text=\"Projects\" />\n          {this.renderMainButton()}\n        </div>\n        <br />\n        <br />\n        <Card>{this.renderChoice()}</Card>\n      </div>\n    );\n  }\n}\n\nexport default UserProject;\n","/home/matrix11/Project/client/src/components/contribution-card/contribution-card.component.jsx",[],"/home/matrix11/Project/client/src/components/cardlist/cardlist.component.jsx",[],["156","157"],"/home/matrix11/Project/client/src/components/form-textarea/form-textarea.component.jsx",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":2,"column":16,"nodeType":"164","messageId":"165","endLine":2,"endColumn":29},{"ruleId":"158","replacedBy":"166"},{"ruleId":"160","replacedBy":"167"},{"ruleId":"158","replacedBy":"168"},{"ruleId":"160","replacedBy":"169"},{"ruleId":"158","replacedBy":"170"},{"ruleId":"160","replacedBy":"171"},{"ruleId":"162","severity":1,"message":"172","line":6,"column":7,"nodeType":"164","messageId":"165","endLine":6,"endColumn":19},{"ruleId":"162","severity":1,"message":"173","line":5,"column":17,"nodeType":"164","messageId":"165","endLine":5,"endColumn":26},{"ruleId":"162","severity":1,"message":"174","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":20},{"ruleId":"158","replacedBy":"175"},{"ruleId":"160","replacedBy":"176"},{"ruleId":"162","severity":1,"message":"177","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":20},{"ruleId":"162","severity":1,"message":"178","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":16},{"ruleId":"162","severity":1,"message":"179","line":12,"column":8,"nodeType":"164","messageId":"165","endLine":12,"endColumn":23},{"ruleId":"162","severity":1,"message":"180","line":54,"column":8,"nodeType":"164","messageId":"165","endLine":54,"endColumn":15},{"ruleId":"181","severity":1,"message":"182","line":438,"column":21,"nodeType":"164","messageId":"183","endLine":438,"endColumn":29},{"ruleId":"181","severity":1,"message":"184","line":475,"column":13,"nodeType":"164","messageId":"183","endLine":475,"endColumn":21},{"ruleId":"162","severity":1,"message":"179","line":9,"column":8,"nodeType":"164","messageId":"165","endLine":9,"endColumn":23},{"ruleId":"158","replacedBy":"185"},{"ruleId":"160","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":165,"column":61,"nodeType":"189","messageId":"190","endLine":165,"endColumn":63},{"ruleId":"191","severity":1,"message":"192","line":6,"column":54,"nodeType":"193","endLine":6,"endColumn":69},{"ruleId":"162","severity":1,"message":"194","line":16,"column":8,"nodeType":"164","messageId":"165","endLine":16,"endColumn":17},{"ruleId":"162","severity":1,"message":"195","line":20,"column":8,"nodeType":"164","messageId":"165","endLine":20,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":505,"column":40,"nodeType":"198","messageId":"199","endLine":505,"endColumn":41},{"ruleId":"196","severity":1,"message":"197","line":515,"column":40,"nodeType":"198","messageId":"199","endLine":515,"endColumn":41},{"ruleId":"158","replacedBy":"200"},{"ruleId":"160","replacedBy":"201"},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar",["202"],["203"],["202"],["203"],["202"],["203"],"'moreSkillTag' is assigned a value but never used.","'Component' is defined but never used.","'CustomButton' is defined but never used.",["202"],["203"],"'CancelButton' is defined but never used.","'CardList' is defined but never used.","'ProjectCardView' is defined but never used.","'PlusSVG' is defined but never used.","no-redeclare","'logoName' is already defined.","redeclared","'keyvalue' is already defined.",["202"],["203"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'SkillCard' is defined but never used.","'FormTextbox' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["202"],["203"],"no-global-assign","no-unsafe-negation"]