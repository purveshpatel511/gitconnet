[{"/home/matrix11/Project/client/src/index.js":"1","/home/matrix11/Project/client/src/components/header/header.component.jsx":"2","/home/matrix11/Project/client/src/App.js":"3","/home/matrix11/Project/client/src/components/form-input/form-input.component.jsx":"4","/home/matrix11/Project/client/src/components/bookmark-card/bookmark-card.component.jsx":"5","/home/matrix11/Project/client/src/components/contribution-notification-card/contribution-notification-card.component.jsx":"6","/home/matrix11/Project/client/src/reportWebVitals.js":"7","/home/matrix11/Project/client/src/components/projectcardview/projectcardview.component.jsx":"8","/home/matrix11/Project/client/src/components/vertical-scroll/vertical-scroll.component.jsx":"9","/home/matrix11/Project/client/src/components/neumorphic-text/neumorphic-text.component.jsx":"10","/home/matrix11/Project/client/src/components/cardgrid/cardgrid.component.jsx":"11","/home/matrix11/Project/client/src/components/skill-card/skill-card.component.jsx":"12","/home/matrix11/Project/client/src/components/cancel-button/cancel-button.component.jsx":"13","/home/matrix11/Project/client/src/pages/user-profile/user-profile.component.jsx":"14","/home/matrix11/Project/client/src/pages/notification/notification.component.jsx":"15","/home/matrix11/Project/client/src/components/collabration-notification-card/collabration-notification-card.component.jsx":"16","/home/matrix11/Project/client/src/pages/404Page/404Page.component.jsx":"17","/home/matrix11/Project/client/src/components/text-card/text-card.component.jsx":"18","/home/matrix11/Project/client/src/components/form-textbox/form-textbox.component.jsx":"19","/home/matrix11/Project/client/src/components/custom-button/custom-button.component.jsx":"20","/home/matrix11/Project/client/src/pages/search-page/search-page.component.jsx":"21","/home/matrix11/Project/client/src/components/custom-button-card/custom-button-card.component.jsx":"22","/home/matrix11/Project/client/src/components/project-edit-skill/project-edit-skill.component.jsx":"23","/home/matrix11/Project/client/src/components/card/card.component.jsx":"24","/home/matrix11/Project/client/src/pages/user-project/user-project.component.jsx":"25","/home/matrix11/Project/client/src/components/contribution-card/contribution-card.component.jsx":"26","/home/matrix11/Project/client/src/components/cardlist/cardlist.component.jsx":"27"},{"size":501,"mtime":1609403711628,"results":"28","hashOfConfig":"29"},{"size":1913,"mtime":1611343766974,"results":"30","hashOfConfig":"29"},{"size":1074,"mtime":1611343889047,"results":"31","hashOfConfig":"29"},{"size":359,"mtime":1609918589969,"results":"32","hashOfConfig":"29"},{"size":375,"mtime":1610553306756,"results":"33","hashOfConfig":"29"},{"size":495,"mtime":1610562702297,"results":"34","hashOfConfig":"29"},{"size":362,"mtime":1609323110408,"results":"35","hashOfConfig":"29"},{"size":903,"mtime":1610547790482,"results":"36","hashOfConfig":"29"},{"size":542,"mtime":1609401413899,"results":"37","hashOfConfig":"29"},{"size":211,"mtime":1609493295347,"results":"38","hashOfConfig":"29"},{"size":270,"mtime":1609578620386,"results":"39","hashOfConfig":"29"},{"size":424,"mtime":1610193279648,"results":"40","hashOfConfig":"29"},{"size":238,"mtime":1610186267952,"results":"41","hashOfConfig":"29"},{"size":24410,"mtime":1611414512692,"results":"42","hashOfConfig":"29"},{"size":5661,"mtime":1610562711376,"results":"43","hashOfConfig":"29"},{"size":500,"mtime":1610561918487,"results":"44","hashOfConfig":"29"},{"size":487,"mtime":1609493676776,"results":"45","hashOfConfig":"29"},{"size":246,"mtime":1609574656041,"results":"46","hashOfConfig":"29"},{"size":432,"mtime":1610491844967,"results":"47","hashOfConfig":"29"},{"size":259,"mtime":1610131474922,"results":"48","hashOfConfig":"29"},{"size":4865,"mtime":1611414051249,"results":"49","hashOfConfig":"29"},{"size":322,"mtime":1609836284780,"results":"50","hashOfConfig":"29"},{"size":458,"mtime":1610372938320,"results":"51","hashOfConfig":"29"},{"size":200,"mtime":1609520519657,"results":"52","hashOfConfig":"29"},{"size":16992,"mtime":1611239228377,"results":"53","hashOfConfig":"29"},{"size":337,"mtime":1610553448816,"results":"54","hashOfConfig":"29"},{"size":204,"mtime":1609402479359,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1j6ipkc",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/home/matrix11/Project/client/src/index.js",[],["122","123"],"/home/matrix11/Project/client/src/components/header/header.component.jsx",["124"],"/home/matrix11/Project/client/src/App.js",[],"/home/matrix11/Project/client/src/components/form-input/form-input.component.jsx",[],["125","126"],"/home/matrix11/Project/client/src/components/bookmark-card/bookmark-card.component.jsx",[],["127","128"],"/home/matrix11/Project/client/src/components/contribution-notification-card/contribution-notification-card.component.jsx",[],"/home/matrix11/Project/client/src/reportWebVitals.js",[],["129","130"],"/home/matrix11/Project/client/src/components/projectcardview/projectcardview.component.jsx",["131"],"import React from 'react';\nimport './projectcardview.style.scss'\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport Card from '../card/card.component';\n\nconst ProjectCardView = (props) => {\n    console.log(props)\n    return(\n        <div className=\"project-card-view\">\n            <h2 className=\"project-title\">{props.projectTitle}</h2>\n            <span className=\"project-discription\">{props.projectDescription}</span>\n            <br/><br />\n            <div className=\"skills-block\">\n                {\n                    props.projectSkill.map((skill) => (\n                        <Card>\n                            <span className=\"project-skill\">{skill}</span>\n                        </Card>\n                    ))\n                }\n            </div>\n            <br/><br />\n            {props.children}\n        </div>        \n    );\n}\n\nexport default ProjectCardView;","/home/matrix11/Project/client/src/components/vertical-scroll/vertical-scroll.component.jsx",["132","133"],"// This is VerticalScroll Component.\n// Every Component that will be display in vertical\n// scroll view that will be disply by this Component.\n\nimport React, { Component } from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport './vertical-scroll.style.scss'\n\nconst VerticalScroll = (props) => {\n    \n    return(\n        <div \n            className=\"vertical-scroll\"\n            style = {{height: props.height,}}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nexport default VerticalScroll;",["134","135"],"/home/matrix11/Project/client/src/components/neumorphic-text/neumorphic-text.component.jsx",[],"/home/matrix11/Project/client/src/components/cardgrid/cardgrid.component.jsx",[],"/home/matrix11/Project/client/src/components/skill-card/skill-card.component.jsx",["136"],"import React from 'react';\nimport './skill-card.style.scss';\n\nimport CancelButton from '../cancel-button/cancel-button.component';\n\nconst SkillCard = ({imageURL, imageText, id}) => {\n    return (\n        <div id={id} className=\"skill-card\">\n            <img className=\"skill-svg\" src={imageURL} alt={imageText} />\n            <span className=\"skill-name\">{imageText}</span>\n        </div>\n    );\n}\n\nexport default SkillCard;","/home/matrix11/Project/client/src/components/cancel-button/cancel-button.component.jsx",[],["137","138"],"/home/matrix11/Project/client/src/pages/user-profile/user-profile.component.jsx",["139","140","141","142","143"],"/home/matrix11/Project/client/src/pages/notification/notification.component.jsx",["144"],"import React from 'react';\nimport './notification.style.scss';\n\nimport CardGrid from '../../components/cardgrid/cardgrid.component';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport TextCard from '../../components/text-card/text-card.component';\nimport Card from '../../components/card/card.component';\nimport VerticalScroll from '../../components/vertical-scroll/vertical-scroll.component';\nimport ProjectCardView from '../../components/projectcardview/projectcardview.component';\nimport CardList from '../../components/cardlist/cardlist.component';\nimport CollabrationNotificationCard from '../../components/collabration-notification-card/collabration-notification-card.component';\nimport ContributionNotificationCard from '../../components/contribution-notification-card/contribution-notification-card.component';\n\nclass Notification extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            collabrations: [\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    user: \"purvesh\",\n                    requestedProject: \"gitConnet\"\n                }\n            ],\n            contributions: [\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                },\n                {\n                    status: \"Ongoing\",\n                    requestedProject: \"gitConnet\"\n                }\n            ]\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"notification\">\n                <TextCard text=\"Notifications\" />\n                <br /><br />\n                    <CardGrid gridColumn=\"1fr 1fr\">\n                        <Card>\n                            <h2 className=\"inner-header\">Collabration Requests</h2>\n                            <VerticalScroll height=\"520px\">\n                                <CardList>\n                                    {\n                                        this.state.collabrations.map(collabration => (\n                                            <CollabrationNotificationCard user={collabration.user} requestedProject={collabration.requestedProject}>\n                                                <CustomButton title=\"Accept\" />\n                                                <CustomButton title=\"Reject\" />\n                                            </CollabrationNotificationCard>\n                                        ))\n                                    }\n                                </CardList>\n                            </VerticalScroll>\n                        </Card>\n                        <Card>\n                            <h2 className=\"inner-header\">Contribution Requests</h2>\n                            <VerticalScroll height=\"520px\">\n                                <CardList>\n                                    {\n                                        this.state.contributions.map(contribution => (\n                                            <ContributionNotificationCard requestedProject={contribution.requestedProject} status={contribution.status}>\n                                                <CustomButton title=\"Remove\" />\n                                            </ContributionNotificationCard>\n                                        ))\n                                    }\n                                </CardList>\n                            </VerticalScroll>\n                        </Card>\n                    </CardGrid>\n            </div>\n        );\n    }\n}\n\nexport default Notification;","/home/matrix11/Project/client/src/components/collabration-notification-card/collabration-notification-card.component.jsx",[],["145","146"],"/home/matrix11/Project/client/src/pages/404Page/404Page.component.jsx",[],"/home/matrix11/Project/client/src/components/text-card/text-card.component.jsx",[],"/home/matrix11/Project/client/src/components/form-textbox/form-textbox.component.jsx",[],"/home/matrix11/Project/client/src/components/custom-button/custom-button.component.jsx",[],"/home/matrix11/Project/client/src/pages/search-page/search-page.component.jsx",[],"/home/matrix11/Project/client/src/components/custom-button-card/custom-button-card.component.jsx",[],"/home/matrix11/Project/client/src/components/project-edit-skill/project-edit-skill.component.jsx",[],"/home/matrix11/Project/client/src/components/card/card.component.jsx",[],"/home/matrix11/Project/client/src/pages/user-project/user-project.component.jsx",["147","148","149","150"],"import React from 'react';\nimport './user-project.style.scss';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport TextCard from '../../components/text-card/text-card.component';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport CardGrid from '../../components/cardgrid/cardgrid.component';\nimport CardList from '../../components/cardlist/cardlist.component';\nimport Card from '../../components/card/card.component';\nimport ProjectCardView from '../../components/projectcardview/projectcardview.component';\nimport VerticalScroll from '../../components/vertical-scroll/vertical-scroll.component';\nimport SkillCard from '../../components/skill-card/skill-card.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport ProjectEditSkill from '../../components/project-edit-skill/project-edit-skill.component';\nimport CancelButton from '../../components/cancel-button/cancel-button.component';\nimport FormTextbox from '../../components/form-textbox/form-textbox.component';\n\n\nclass UserProject extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            isAddProject: false,\n            isEditProject: false,\n            editProjectKey: null,\n            tempSkill: \"\",\n            newProjectTitle: \"\",\n            newProjectDescription: \"\",\n            newProjectURL: \"\",\n            newProjectSkills: [],\n            projects: [\n                {\n                    title: \"project-1\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\",\"python\",\"reactJS\",\"python\",\"reactJS\",\"python\",\"reactJS\",\"python\",\"reactJS\",\"python\",\"reactJS\",\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-2\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-3\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-4\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-5\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-6\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-7\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n                {\n                    title: \"project-8\",\n                    description: \"This is a small description of this project-1. BEtter fit in size to avoid overflow and make CSS ugly.\",\n                    skills: [\"python\",\"reactJS\"],\n                },\n            ]\n        }\n    }\n\n    resetKey() {\n        this.state.projects.forEach((project, i) => {\n            project.key = i+1\n        })\n    }\n\n    removeProject = (id) => {\n        this.setState({projects: this.state.projects.filter(\n            project => {return project.key !== id}\n        )})\n    }\n\n    addSkill = (id) => {\n        this.setState(({projects}) => ({\n            projects: [\n                ...projects.slice(0,id),\n                {\n                    ...projects[id],\n                    skills: this.state.projects[id].skills.concat(this.state.tempSkill),\n                },\n                ...projects.slice(id+1)\n            ],\n            tempSkill: \"\",\n        }))\n    }\n\n    removeSkill = (remove_skill,id) => {\n        this.setState(({projects}) => ({\n            projects: [\n                ...projects.slice(0,id),\n                {\n                    ...projects[id],\n                    skills: this.state.projects[id].skills.filter(\n                        skill => { return skill !== remove_skill}\n                    )\n                },\n                ...projects.slice(id+1)\n            ]\n        }))\n    }\n\n    editProjectDetails = (id) => {\n        return(\n            <div className=\"edit-project-section\">\n                <br />\n                <CardGrid gridColumn=\"1fr 1fr\">\n                    <Card>\n                        <VerticalScroll height=\"500px\">\n                            <div className=\"title-section\">\n                                <div className=\"title-card\">\n                                    <Card><h3>Title</h3></Card>\n                                </div>\n                                <FormInput placeholder=\"Enter Title\" value={this.state.projects[id].title} onChange={(e) => {\n                                    this.setState(({projects}) => ({\n                                        projects: [\n                                            ...projects.slice(0,id),\n                                            {\n                                                ...projects[id],\n                                                title: e.target.value,\n                                            },\n                                            ...projects.slice(id+1)\n                                        ]\n                                    }))\n                                }} />\n                            </div>\n                            <br /><br />\n                            <div className=\"description-section\">\n                                <div className=\"title-card\">\n                                    <Card><h3>Description</h3></Card>\n                                </div>\n                                <FormInput placeholder=\"Enter Description\" value={this.state.projects[id].description} onChange={(e) => {\n                                    this.setState(({projects}) => ({\n                                        projects: [\n                                            ...projects.slice(0,id),\n                                            {\n                                                ...projects[id],\n                                                description: e.target.value,\n                                            },\n                                            ...projects.slice(id+1)\n                                        ]\n                                    }))\n                                }} />\n                            </div>\n                        </VerticalScroll>\n                    </Card>\n                    <Card>\n                        <h2 className=\"inner-header\">Required Skill</h2>\n                        <div className=\"add-new-skill\">\n                            <FormInput placeholder=\"Skill\" value={this.state.tempSkill} onChange={e => {this.setState({tempSkill: e.target.value})}} />\n                            <CustomButton title=\"Add Skill\" onClick={() => this.addSkill(id)}/>\n                        </div>\n                        <br /><br />\n                        <div className=\"user-project-edit-skill\">\n                            <VerticalScroll height=\"300px\">\n                                <CardGrid gridColumn=\"1fr 1fr 1fr\">\n                                    {\n                                        this.state.projects[id].skills.map(skill => {\n                                            return (\n                                                <ProjectEditSkill skill={skill}>\n                                                    <CancelButton onClick={() => this.removeSkill(skill,id)} />\n                                                </ProjectEditSkill>   \n                                            )\n                                        })\n                                    }\n                                </CardGrid>\n                            </VerticalScroll>\n                        </div>\n                    </Card>\n                </CardGrid>\n                <br/>\n                <div className=\"custom-save\">\n                    <CustomButton title=\"Save Details\" onClick={() => {this.setState({isEditProject: false}); this.successNotification()}} />\n                </div>\n            </div>\n        )\n    }\n\n    addNewProject = () => {\n        return(\n            <div className=\"add-project-section\">\n                <br/>\n                <CardGrid gridColumn=\"1fr 1fr\">\n                    <Card>\n                        <VerticalScroll height=\"500px\">\n                            <div className=\"title-section\">\n                                <div className=\"title-card\">\n                                    <Card><h3>Title</h3></Card>\n                                </div>\n                                <FormInput placeholder=\"Enter Title\" value={this.state.newProjectTitle} onChange={(e) => {this.setState({newProjectTitle: e.target.value})}} />\n                            </div>\n                            <br /><br />\n                            <div className=\"description-section\">\n                                <div className=\"title-card\">\n                                    <Card><h3>Description</h3></Card>\n                                </div>\n                                <FormInput placeholder=\"Enter Description\" value={this.state.newProjectDescription} onChange={(e) => {this.setState({newProjectDescription: e.target.value})}} />\n                            </div>\n                            <br /><br />\n                            <div className=\"project-url-section\">\n                                <div className=\"title-card\">\n                                    <Card><h3>Description</h3></Card>\n                                </div>\n                                <FormInput placeholder=\"Enter Project URL\" value={this.state.newProjectURL} onChange={(e) => {this.setState({newProjectURL: e.target.value})}} />\n                            </div>\n                        </VerticalScroll>\n                    </Card>\n                    <Card>\n                        <h2 className=\"inner-header\">Required Skill</h2>\n                        <div className=\"add-new-skill\">\n                            <FormInput placeholder=\"Skill\" value={this.state.tempSkill} onChange={e => {this.setState({tempSkill: e.target.value})}} />\n                            <CustomButton title=\"Add Skill\" onClick={() => {this.setState({newProjectSkills: this.state.newProjectSkills.concat(this.state.tempSkill), tempSkill: \"\"})}}/>\n                        </div>\n                        <br /><br />\n                        <div className=\"user-project-edit-skill\">\n                            <VerticalScroll height=\"300px\">\n                                <CardGrid gridColumn=\"1fr 1fr 1fr\">\n                                    {\n                                        this.state.newProjectSkills.map(skill => {\n                                            return (\n                                                <ProjectEditSkill skill={skill}>\n                                                    <CancelButton onClick={() => {this.setState({newProjectSkills: this.state.newProjectSkills.filter(\n                                                        (newSkill) => {return newSkill !== skill}\n                                                    )})}} />\n                                                </ProjectEditSkill>   \n                                            )\n                                        })\n                                    }\n                                </CardGrid>\n                            </VerticalScroll>\n                        </div>\n                    </Card>\n                </CardGrid>\n                <br />\n                <div className=\"add-remove-project\">\n                    <CardGrid gridColumn=\"1fr 1fr\">\n                        <div className=\"custom-save\">\n                            <CustomButton title=\"Save Details\" onClick={() => {this.setState({\n                                isAddProject: false,\n                                projects: this.state.projects.concat({\n                                    title: this.state.newProjectTitle,\n                                    description: this.state.newProjectDescription,\n                                    skills: this.state.newProjectSkills\n                                }),\n                                newProjectTitle: \"\",\n                                newProjectDescription: \"\",\n                                newProjectSkills: [],\n                                newProjectURL: \"\",\n                            });\n                            this.successNotification()\n                            }} />\n                        </div>\n                        <div className=\"discard-save\">\n                            <CustomButton title=\"Discard Project\" onClick={() => {this.setState({\n                                isAddProject: false,\n                                newProjectTitle: \"\",\n                                newProjectDescription: \"\",\n                                newProjectSkills: [],\n                                newProjectURL: \"\"\n                            });\n                            this.discardNotification()\n                            }} />\n                        </div>\n                    </CardGrid>\n                </div>\n            </div>\n        )\n    }\n\n    renderProjects() {\n        return(\n            <div className=\"projects-section\">\n                <VerticalScroll height=\"600px\">\n                    <CardList>\n                        {\n                            this.state.projects.map(project => (\n                                <ProjectCardView projectTitle={project.title} projectDescription={project.description} projectSkill={project.skills}>\n                                    <CardGrid gridColumn=\"1fr 1fr\">\n                                        <CustomButton title=\"Edit Details\" onClick={() => (this.resetKey(),this.setState({isEditProject: true, editProjectKey: project.key}))} />\n                                        <CustomButton title=\"Remove Project\" onClick={() => (this.resetKey(),this.removeProject(project.key), this.removeNotification())} />\n                                    </CardGrid>\n                                </ProjectCardView>\n                            ))\n                        }\n                    </CardList>\n                </VerticalScroll>\n            </div>\n        )\n    }\n\n    renderChoice() {\n        if(this.state.isEditProject){\n            return(\n                this.editProjectDetails(this.state.editProjectKey - 1)\n            )\n        }\n        else{\n            if(this.state.isAddProject){\n                return(\n                    this.addNewProject()\n                )\n            }\n            else{\n                return(\n                    this.renderProjects()\n                )\n            }\n        }\n    }\n\n    successNotification() {\n        toast.success(\"Project Successfully Saved.\")\n    }\n\n    discardNotification() {\n        toast.warning(\"Project Details Discard.\")\n    }\n\n    removeNotification() {\n        toast.error(\"Project Removed.\")\n    }\n\n    renderMainButton() {\n        if(this.state.isEditProject){\n            return(\n                <CustomButton title=\"Save Details\" onClick={() => {this.setState({isEditProject: false}); this.successNotification()}} />\n            )\n        }\n        else{\n            if(this.state.isAddProject){\n                <CustomButton title=\"Save Details\" onClick={() => {this.setState({isAddProject: false}); this.successNotification()}} />\n            }\n            else{\n                return(\n                    <CustomButton title=\"Add Project\" onClick={() => {this.setState({isAddProject: true})}} />\n                )\n            }\n        }\n    }\n\n    render() {\n        toast.configure();\n        return(\n            <div className=\"user-project\">\n                <div className=\"project-header\">\n                    <TextCard text=\"Projects\" />        \n                    {this.renderMainButton()}\n                </div>\n                <br /><br />\n                <Card>\n                    {this.renderChoice()}\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default UserProject;","/home/matrix11/Project/client/src/components/contribution-card/contribution-card.component.jsx",[],"/home/matrix11/Project/client/src/components/cardlist/cardlist.component.jsx",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":29},{"ruleId":"151","replacedBy":"159"},{"ruleId":"153","replacedBy":"160"},{"ruleId":"151","replacedBy":"161"},{"ruleId":"153","replacedBy":"162"},{"ruleId":"151","replacedBy":"163"},{"ruleId":"153","replacedBy":"164"},{"ruleId":"155","severity":1,"message":"165","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":20},{"ruleId":"155","severity":1,"message":"166","line":5,"column":17,"nodeType":"157","messageId":"158","endLine":5,"endColumn":26},{"ruleId":"155","severity":1,"message":"165","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":20},{"ruleId":"151","replacedBy":"167"},{"ruleId":"153","replacedBy":"168"},{"ruleId":"155","severity":1,"message":"169","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":20},{"ruleId":"151","replacedBy":"170"},{"ruleId":"153","replacedBy":"171"},{"ruleId":"155","severity":1,"message":"172","line":10,"column":8,"nodeType":"157","messageId":"158","endLine":10,"endColumn":16},{"ruleId":"155","severity":1,"message":"173","line":12,"column":8,"nodeType":"157","messageId":"158","endLine":12,"endColumn":23},{"ruleId":"155","severity":1,"message":"174","line":54,"column":8,"nodeType":"157","messageId":"158","endLine":54,"endColumn":15},{"ruleId":"175","severity":1,"message":"176","line":392,"column":21,"nodeType":"157","messageId":"177","endLine":392,"endColumn":29},{"ruleId":"175","severity":1,"message":"178","line":429,"column":13,"nodeType":"157","messageId":"177","endLine":429,"endColumn":21},{"ruleId":"155","severity":1,"message":"173","line":9,"column":8,"nodeType":"157","messageId":"158","endLine":9,"endColumn":23},{"ruleId":"151","replacedBy":"179"},{"ruleId":"153","replacedBy":"180"},{"ruleId":"155","severity":1,"message":"181","line":14,"column":8,"nodeType":"157","messageId":"158","endLine":14,"endColumn":17},{"ruleId":"155","severity":1,"message":"182","line":18,"column":8,"nodeType":"157","messageId":"158","endLine":18,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":296,"column":107,"nodeType":"185","messageId":"186","endLine":296,"endColumn":108},{"ruleId":"183","severity":1,"message":"184","line":297,"column":109,"nodeType":"185","messageId":"186","endLine":297,"endColumn":110},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar",["187"],["188"],["187"],["188"],["187"],["188"],"'CustomButton' is defined but never used.","'Component' is defined but never used.",["187"],["188"],"'CancelButton' is defined but never used.",["187"],["188"],"'CardList' is defined but never used.","'ProjectCardView' is defined but never used.","'PlusSVG' is defined but never used.","no-redeclare","'logoName' is already defined.","redeclared","'keyvalue' is already defined.",["187"],["188"],"'SkillCard' is defined but never used.","'FormTextbox' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]